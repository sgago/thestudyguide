services:
  consul:
    image: hashicorp/consul:latest
    command: agent -server -bootstrap -ui -client=0.0.0.0
    ports:
      - 8500:8500 # Consul web UI
    networks:
      - goginair-net
      
  traefik:
    image: traefik:v3.3
    command:
      - --api.insecure=true
      - --providers.Docker
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - goginair-net

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
    depends_on:
      - traefik
    networks:
      - goginair-net

  goginair:
    image: steve8550/goginair:latest
    build:
      context: ./
      dockerfile: dockerfile
    expose:
      - 8080  # Expose internal port without publishing it to the host
    environment:
      - PORT=8080
      - SERVICE_NAME=goginair
      - SERVICE_TAGS=http
      - SERVICE_ADDRESS=goginair
      - CONSUL_ADDRESS=consul:8500
      - IS_LOCAL=false
    labels:
      - traefik.enable=true  # Enable Traefik for this service
      - traefik.http.routers.goginair.rule=Host(`goginair.localhost`)  # Route traffic to goginair.local
      - traefik.http.services.goginair.loadbalancer.server.port=8080  # Forward traffic to internal port 8080
    networks:
      - goginair-net
    depends_on:
      - consul
      - traefik
    deploy:
      replicas: 2  # Scale the number of replicas
      restart_policy:
        condition: on-failure

networks:
  goginair-net:
    driver: bridge